{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DateDisplay","dt","Date","setDate","getDate","yearStr","getFullYear","monthStr","getMonth","dayStr","weekStr","getDay","Fragment","className","holiday_jp","weeklyColor","holidayName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAKMA,EAAc,WAClB,IAgBMC,EAAK,IAAIC,KACfD,EAAGE,QAAQF,EAAGG,UAAY,GAC1B,IAAMC,EAAO,UAAMJ,EAAGK,cAAT,UACPC,EAAQ,UAAMN,EAAGO,WAAa,EAAtB,UACRC,EAAM,UAAMR,EAAGG,WACfM,EAAO,UAAM,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,UAAKT,EAAGU,UAAvC,gBAEb,OACE,eAAC,IAAMC,SAAP,WACE,qBAAKC,UAAU,yBACf,sBAAKA,UAAS,wBA1BE,SAACZ,GACnB,GAAIa,YAAqBb,GACvB,MAAO,eAET,OAAQA,EAAGU,UACT,KAAK,EAAG,MAAO,eACf,KAAK,EAAG,MAAO,gBACf,QAAS,MAAO,cAmBiBI,CAAYd,IAA7C,UACE,sBAAKY,UAAU,YAAf,UACE,qBAAKA,UAAU,qBAAf,SAAqCR,IACrC,qBAAKQ,UAAU,uCAAf,SAAuDN,OAEzD,sBAAKM,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCJ,IACtC,qBAAKI,UAAU,gBAAf,SAAgCH,IAChC,qBAAKG,UAAU,UAAf,SAxBY,SAACZ,GACnB,GAAIa,YAAqBb,GACvB,OAAOa,UAAmBb,EAAIA,GAAI,GAA3B,KAsBuBe,CAAYf,eAkBjCgB,MAXf,WACE,OACE,eAAC,IAAML,SAAP,WACE,qBAAKC,UAAU,eACf,qBAAKA,UAAU,6DAAf,SACE,cAAC,EAAD,UCxCOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9c38e438.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport * as holiday_jp from '@holiday-jp/holiday_jp';\n\n\nconst DateDisplay = () => {\n  const weeklyColor = (dt) => {\n    if (holiday_jp.isHoliday(dt)) {\n      return 'text-red-600';\n    }\n    switch (dt.getDay()) {\n      case 0: return 'text-red-600';\n      case 6: return 'text-blue-600';\n      default: return 'text-black';\n    }\n  }\n  const holidayName = (dt) => {\n    if (holiday_jp.isHoliday(dt)) {\n      return holiday_jp.between(dt, dt)[0]['name'];\n    }\n  }\n\n  const dt = new Date();\n  dt.setDate(dt.getDate() + 4);\n  const yearStr = `${dt.getFullYear()}年`;\n  const monthStr = `${dt.getMonth() + 1}月`;\n  const dayStr = `${dt.getDate()}`;\n  const weekStr = `${['日','月','火','水','木','金','土'][dt.getDay()]}曜日`;\n  \n  return (\n    <React.Fragment>\n      <div className=\"w-auto h-10 bg-black\"></div>\n      <div className={`__font-gothic ${weeklyColor(dt)}`}>\n        <div className=\"mx-4 mt-2\">\n          <div className=\"absolute text-left\">{yearStr}</div>\n          <div className=\"relative text-4xl text-center -top-2\">{monthStr}</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"font-bold text-huge\">{dayStr}</div>\n          <div className=\"mt-6 text-3xl\">{weekStr}</div>\n          <div className=\"text-lg\">{holidayName(dt)}</div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n};\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"__bg-image\"></div>\n      <div className=\"relative w-64 mx-auto bg-white shadow-calendar top-14 h-96\">\n        <DateDisplay />\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}