{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DateDisplay","useState","count","setCount","topPaperRef","useRef","weeklyColor","dt","holiday_jp","getDay","holidayName","dayData","yearStr","getFullYear","monthStr","getMonth","dayStr","getDate","weekStr","dt1","Date","dt2","setDate","dayData1","dayData2","className","onClick","ref","current","classList","add","window","setTimeout","remove","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAIMA,EAAc,WAAO,IAAD,EACEC,mBAAS,GADX,mBACjBC,EADiB,KACVC,EADU,KAElBC,EAAcC,iBAAO,MAUrBC,EAAc,SAACC,GACnB,GAAIC,YAAqBD,GACvB,MAAO,eAET,OAAQA,EAAGE,UACT,KAAK,EAAG,MAAO,eACf,KAAK,EAAG,MAAO,gBACf,QAAS,MAAO,eAGdC,EAAc,SAACH,GACnB,GAAIC,YAAqBD,GACvB,OAAOC,UAAmBD,EAAIA,GAAI,GAA3B,MAILI,EAAU,SAACJ,GACf,MAAO,CACLK,QAAQ,GAAD,OAAKL,EAAGM,cAAR,UACPC,SAAS,GAAD,OAAKP,EAAGQ,WAAa,EAArB,UACRC,OAAO,GAAD,OAAKT,EAAGU,WACdC,QAAQ,GAAD,OAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,UAAKX,EAAGE,UAAtC,gBACPH,YAAaA,EAAYC,GACzBG,YAAaA,EAAYH,KAIvBY,EAAM,IAAIC,KACVC,EAAM,IAAID,KAChBD,EAAIG,QAAQH,EAAIF,UAAYf,GAC5BmB,EAAIC,QAAQD,EAAIJ,UAAYf,EAAQ,GAEpC,IAAMqB,EAAWZ,EAAQQ,GACnBK,EAAWb,EAAQU,GAGzB,OACE,sBAAKI,UAAU,8CAAf,UACE,qBAAKA,UAAU,0CAA0CC,QAAS,WAAOvB,EAAS,MAClF,qBACEsB,UAAU,wDACVE,IAAKvB,EACLsB,QAlDW,WACftB,EAAYwB,QAAQC,UAAUC,IAAI,mBAClCC,OAAOC,YAAW,WAChB5B,EAAYwB,QAAQC,UAAUI,OAAO,mBACrC9B,EAASD,EAAQ,KAChB,MA0CD,SAKE,sBAAKuB,UAAWF,EAASjB,YAAzB,UACE,sBAAKmB,UAAU,YAAf,UACE,qBAAKA,UAAU,6BAAf,SAA6CF,EAASX,UACtD,qBAAKa,UAAU,uCAAf,SAAuDF,EAAST,cAElE,sBAAKW,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCF,EAASP,SAC/C,qBAAKS,UAAU,gBAAf,SAAgCF,EAASL,UACzC,qBAAKO,UAAU,UAAf,SAA0BF,EAASb,sBAIzC,qBAAKe,UAAU,gDAAf,SACE,sBAAKA,UAAWD,EAASlB,YAAzB,UACE,sBAAKmB,UAAU,YAAf,UACE,qBAAKA,UAAU,6BAAf,SAA6CD,EAASZ,UACtD,qBAAKa,UAAU,uCAAf,SAAuDD,EAASV,cAElE,sBAAKW,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCD,EAASR,SAC/C,qBAAKS,UAAU,gBAAf,SAAgCD,EAASN,UACzC,qBAAKO,UAAU,UAAf,SAA0BD,EAASd,sBAIzC,qBAAKe,UAAU,kEACf,qBAAKA,UAAU,0BAcNS,MATf,WACE,OACE,eAAC,IAAMC,SAAP,WACE,qBAAKV,UAAU,eACf,cAAC,EAAD,QCnFSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7adbe9cd.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport * as holiday_jp from '@holiday-jp/holiday_jp';\n\nconst DateDisplay = () => {\n  const [count, setCount] = useState(0);\n  const topPaperRef = useRef(null);\n\n  const onMekuri = () => {\n    topPaperRef.current.classList.add('__paper-fadeout');\n    window.setTimeout(() => {\n      topPaperRef.current.classList.remove('__paper-fadeout');\n      setCount(count + 1);\n    }, 200);\n  }\n  \n  const weeklyColor = (dt) => {\n    if (holiday_jp.isHoliday(dt)) {\n      return 'text-red-600';\n    }\n    switch (dt.getDay()) {\n      case 0: return 'text-red-600';\n      case 6: return 'text-blue-600';\n      default: return 'text-black';\n    }\n  }\n  const holidayName = (dt) => {\n    if (holiday_jp.isHoliday(dt)) {\n      return holiday_jp.between(dt, dt)[0]['name'];\n    }\n  }\n\n  const dayData = (dt) => {\n    return {\n      yearStr: `${dt.getFullYear()}年`,\n      monthStr: `${dt.getMonth() + 1}月`,\n      dayStr: `${dt.getDate()}`,\n      weekStr: `${['日','月','火','水','木','金','土'][dt.getDay()]}曜日`,\n      weeklyColor: weeklyColor(dt),\n      holidayName: holidayName(dt),\n    }\n  }\n\n  const dt1 = new Date();\n  const dt2 = new Date();\n  dt1.setDate(dt1.getDate() + count);\n  dt2.setDate(dt2.getDate() + count + 1);\n\n  const dayData1 = dayData(dt1);\n  const dayData2 = dayData(dt2);\n\n\n  return (\n    <div className=\"absolute transform -translate-x-32 left-1/2\">\n      <div className=\"absolute z-40 w-64 h-10 bg-black top-16\" onClick={() => {setCount(0)}}></div>\n      <div \n        className=\"absolute z-30 w-64 pt-10 bg-white top-16 h-96 __paper\"\n        ref={topPaperRef}\n        onClick={onMekuri}\n      >\n        <div className={dayData1.weeklyColor}>\n          <div className=\"mx-4 mt-2\">\n            <div className=\"absolute text-lg text-left\">{dayData1.yearStr}</div>\n            <div className=\"relative text-4xl text-center -top-2\">{dayData1.monthStr}</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"font-bold text-huge\">{dayData1.dayStr}</div>\n            <div className=\"mt-6 text-3xl\">{dayData1.weekStr}</div>\n            <div className=\"text-lg\">{dayData1.holidayName}</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"absolute z-20 w-64 pt-10 bg-white top-16 h-96\">\n        <div className={dayData2.weeklyColor}>\n          <div className=\"mx-4 mt-2\">\n            <div className=\"absolute text-lg text-left\">{dayData2.yearStr}</div>\n            <div className=\"relative text-4xl text-center -top-2\">{dayData2.monthStr}</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"font-bold text-huge\">{dayData2.dayStr}</div>\n            <div className=\"mt-6 text-3xl\">{dayData2.weekStr}</div>\n            <div className=\"text-lg\">{dayData2.holidayName}</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"absolute z-10 w-64 pt-10 bg-white top-16 h-96 shadow-calendar\"></div>\n      <div className=\"__calendar-bottom\"></div>\n    </div>\n  )\n};\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"__bg-image\"></div>\n      <DateDisplay />\n    </React.Fragment>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}