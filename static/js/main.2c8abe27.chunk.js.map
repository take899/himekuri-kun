{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DateDisplay","useState","count","setCount","dt","Date","setDate","getDate","yearStr","getFullYear","monthStr","getMonth","dayStr","weekStr","getDay","className","onClick","holiday_jp","weeklyColor","holidayName","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAIMA,EAAc,WAAO,IAAD,EACEC,mBAAS,GADX,mBACjBC,EADiB,KACVC,EADU,KAkBlBC,EAAK,IAAIC,KACfD,EAAGE,QAAQF,EAAGG,UAAYL,GAC1B,IAAMM,EAAO,UAAMJ,EAAGK,cAAT,UACPC,EAAQ,UAAMN,EAAGO,WAAa,EAAtB,UACRC,EAAM,UAAMR,EAAGG,WACfM,EAAO,UAAM,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,UAAKT,EAAGU,UAAvC,gBAEb,OACE,sBAAKC,UAAU,8CAAf,UACE,sBAAKA,UAAU,0DAAf,UACE,qBAAKA,UAAU,8DAA8DC,QAAS,kBAAMb,EAAS,MACrG,qBAAKa,QAAS,kBAAMb,EAASD,EAAQ,IAArC,SACE,sBAAKa,UAAS,wBA5BF,SAACX,GACnB,GAAIa,YAAqBb,GACvB,MAAO,eAET,OAAQA,EAAGU,UACT,KAAK,EAAG,MAAO,eACf,KAAK,EAAG,MAAO,gBACf,QAAS,MAAO,cAqBqBI,CAAYd,IAA7C,UACE,sBAAKW,UAAU,YAAf,UACE,qBAAKA,UAAU,6BAAf,SAA6CP,IAC7C,qBAAKO,UAAU,uCAAf,SAAuDL,OAEzD,sBAAKK,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCH,IACtC,qBAAKG,UAAU,gBAAf,SAAgCF,IAChC,qBAAKE,UAAU,UAAf,SA1BQ,SAACX,GACnB,GAAIa,YAAqBb,GACvB,OAAOa,UAAmBb,EAAIA,GAAI,GAA3B,KAwB2Be,CAAYf,gBAK9C,qBAAKW,UAAU,0BAeNK,MAVf,WACE,OACE,eAAC,IAAMC,SAAP,WACE,qBAAKN,UAAU,eACf,cAAC,EAAD,QC5CSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2c8abe27.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport * as holiday_jp from '@holiday-jp/holiday_jp';\n\nconst DateDisplay = () => {\n  const [count, setCount] = useState(0);\n  const weeklyColor = (dt) => {\n    if (holiday_jp.isHoliday(dt)) {\n      return 'text-red-600';\n    }\n    switch (dt.getDay()) {\n      case 0: return 'text-red-600';\n      case 6: return 'text-blue-600';\n      default: return 'text-black';\n    }\n  }\n  const holidayName = (dt) => {\n    if (holiday_jp.isHoliday(dt)) {\n      return holiday_jp.between(dt, dt)[0]['name'];\n    }\n  }\n\n  const dt = new Date();\n  dt.setDate(dt.getDate() + count);\n  const yearStr = `${dt.getFullYear()}年`;\n  const monthStr = `${dt.getMonth() + 1}月`;\n  const dayStr = `${dt.getDate()}`;\n  const weekStr = `${['日','月','火','水','木','金','土'][dt.getDay()]}曜日`;\n  \n  return (\n    <div className=\"absolute transform -translate-x-32 left-1/2\">\n      <div className=\"absolute z-10 w-64 bg-white top-14 h-96 shadow-calendar\">\n        <div className=\"w-auto h-10 bg-black border-b-2 border-gray-300 shadow-b-sm\" onClick={() => setCount(0)}></div>\n        <div onClick={() => setCount(count + 1)}>\n          <div className={`__font-gothic ${weeklyColor(dt)}`}>\n            <div className=\"mx-4 mt-2\">\n              <div className=\"absolute text-lg text-left\">{yearStr}</div>\n              <div className=\"relative text-4xl text-center -top-2\">{monthStr}</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"font-bold text-huge\">{dayStr}</div>\n              <div className=\"mt-6 text-3xl\">{weekStr}</div>\n              <div className=\"text-lg\">{holidayName(dt)}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"__calendar-bottom\"></div>\n    </div>\n  )\n};\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"__bg-image\"></div>\n      <DateDisplay />\n\n    </React.Fragment>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}